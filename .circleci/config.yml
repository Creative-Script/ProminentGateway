version: 2.1

jobs:
  test:
    
    docker:
      - image: circleci/node:14
    steps:
      - checkout
      - run: npm install
      - run: npm test
      - store_artifacts:
          path: coverage
          destination: coverage

      - run: npm run coveralls
      - run: npm run build
      - run: npm install vercel@latest

      - run: npx vercel pull --yes --environment=preview --token=${VERCEL_TOKEN}
      - run: npx vercel build --token=${VERCEL_TOKEN}
      - run: npx vercel deploy --token=${VERCEL_TOKEN}  --force
  prod:
    
    docker:
      - image: circleci/node:14
    steps:
      - checkout
      - run: npm install
      - run: npm test
      - store_artifacts:
          path: coverage
          destination: coverage

      - run: npm run coveralls
      - run: npm run build
      - run: npm install vercel@latest
      - run: npx vercel pull --yes --environment=preview --token=${VERCEL_TOKEN}
      - run: npx vercel build --token=${VERCEL_TOKEN}
      - run: npx vercel deploy --prod --force

workflows:
  build-and-test:
    jobs:
      - test:
          filters: # using regex filters requires the entire branch to match
            branches:
              only: dev
  production:
    jobs:
      - prod:
          filters: # using regex filters requires the entire branch to match
            branches:
              only: main
